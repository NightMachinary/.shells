#!/usr/bin/env dash

if test "$1" = '-c' ; then
   shift
fi

# If we ever should need supporting the featureset of brishzq.zsh, switch to:
# brishz_noquote=y brishzq.zsh "$@"

cmd="$*"
stdin="$brishz_in"
[ "$stdin" = 'MAGIC_READ_STDIN' ] && stdin="$(cat)"
session="${brishz_session}"
nolog="${brishz_nolog}"
endpoint="${bshEndpoint:-http://127.0.0.1:${GARDEN_PORT:-7230}}/zsh/"
if test -n "$nolog" ; then
   endpoint="${endpoint}nolog/"
fi
v=0

if test -e "$cmd" ; then
   cmd="$(cat "$cmd")" || {
      echo Bad input to brishz
      exit 1
   }
fi

if test -z "$brishz_quote" ; then
   curl --fail --silent --location --header 'Content-Type: application/json' --request POST --data "{\"cmd\":\"$cmd\", \"stdin\":\"$stdin\", \"session\":\"$session\", \"verbose\":\"$v\", \"nolog\":\"$nolog\"}" $endpoint
else
    req="$(printf -- "%s " "$stdin" | jq --raw-input --slurp --null-input --compact-output --arg nolog "$nolog" --arg s "$session" --arg c "$cmd" --arg v $v 'inputs as $i | {"cmd": $c, "session": $s, "stdin": $i, "verbose": $v, "nolog": $nolog}')"
    printf -- "%s" "$req" | curl --fail --silent --location --header "Content-Type: application/json" --request POST --data '@-' $endpoint
fi
